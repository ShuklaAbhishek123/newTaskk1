{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\newtask\\\\src\\\\Text.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Data from './colleges.json';\nimport Image from \"./images/college_02.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text() {\n  _s();\n\n  const [userList, setUserList] = useState([]);\n  const [page, setPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [noData, setNoData] = useState(false);\n\n  window.onscroll = () => {\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\n      if (!noData) {\n        loadUserList(page);\n      }\n    }\n  };\n\n  useEffect(() => {\n    loadUserList(page);\n  }, []);\n\n  const loadUserList = page => {\n    setLoading(true);\n    setTimeout(() => {\n      Data.Image.map(page).then(res => {\n        const newPage = page + 1;\n        const newList = userList.concat(res.Data);\n        setUserList(newList);\n        setPage(newPage);\n        if (res.data.length === 0) setNoData(true);\n      }).catch(err => {\n        console.log(err);\n      }).finally(() => {\n        setLoading(false);\n      });\n    }, 1500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      children: [Data.colleges.map((post, i) => {\n        /*#__PURE__*/\n        _jsxDEV(\"div\", {\n          className: \"box m-3 user\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: Image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-details\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), \":\", post.college_name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 62\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this);\n      }), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: \"loading data ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this) : \"\", noData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: \"no data anymore ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Text, \"vkwGzQ7RIe9gbzXlx7Y2mZKPwYA=\");\n\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/newtask/src/Text.js"],"names":["React","useState","useEffect","Data","Image","Text","userList","setUserList","page","setPage","loading","setLoading","noData","setNoData","window","onscroll","innerHeight","document","documentElement","scrollTop","offsetHeight","loadUserList","setTimeout","map","then","res","newPage","newList","concat","data","length","catch","err","console","log","finally","colleges","post","i","college_name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAAA;;AAE7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,KAAD,CAApC;;AAEAa,EAAAA,MAAM,CAACC,QAAP,GAAkB,MAAM;AACtB,QAAID,MAAM,CAACE,WAAP,GAAqBC,QAAQ,CAACC,eAAT,CAAyBC,SAA9C,KAA4DF,QAAQ,CAACC,eAAT,CAAyBE,YAAzF,EAAuG;AACrG,UAAG,CAACR,MAAJ,EAAY;AACVS,QAAAA,YAAY,CAACb,IAAD,CAAZ;AACD;AACF;AACF,GAND;;AAQAN,EAAAA,SAAS,CAAC,MAAM;AACdmB,IAAAA,YAAY,CAACb,IAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMa,YAAY,GAAIb,IAAD,IAAU;AAC7BG,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAW,IAAAA,UAAU,CAAC,MAAM;AACfnB,MAAAA,IAAI,CAACC,KAAL,CAAWmB,GAAX,CAAef,IAAf,EACGgB,IADH,CACSC,GAAD,IAAS;AACb,cAAMC,OAAO,GAAGlB,IAAI,GAAG,CAAvB;AACA,cAAMmB,OAAO,GAAGrB,QAAQ,CAACsB,MAAT,CAAgBH,GAAG,CAACtB,IAApB,CAAhB;AACAI,QAAAA,WAAW,CAACoB,OAAD,CAAX;AACAlB,QAAAA,OAAO,CAACiB,OAAD,CAAP;AACA,YAAGD,GAAG,CAACI,IAAJ,CAASC,MAAT,KAAkB,CAArB,EACEjB,SAAS,CAAC,IAAD,CAAT;AACH,OARH,EASGkB,KATH,CASUC,GAAD,IAAS;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAXH,EAYGG,OAZH,CAYW,MAAK;AACZxB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD,OAdH;AAeC,KAhBO,EAiBT,IAjBS,CAAV;AAkBD,GApBD;;AAsBA,sBACE;AAAA,2BAEE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,iBAEER,IAAI,CAACiC,QAAL,CAAcb,GAAd,CAAkB,CAACc,IAAD,EAAMC,CAAN,KAAY;AAC5B;AACA;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA,kCACE;AAAK,YAAA,GAAG,EAAElC,KAAV;AAAiB,YAAA,GAAG,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,OAE+BiC,IAAI,CAACE,YAFpC,eAEiD;AAAA;AAAA;AAAA;AAAA,oBAFjD;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAAmCD,CAAnC;AAAA;AAAA;AAAA;AAAA,gBADA;AAUD,OAXD,CAFF,EAcG5B,OAAO,gBAAI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAJ,GAA0D,EAdpE,EAeGE,MAAM,gBAAG;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GAA4D,EAfrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GA/DuBP,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Data from './colleges.json'\r\nimport Image from \"./images/college_02.jpg\"\r\n\r\nexport default function Text() {\r\n\r\n  const [userList, setUserList] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [noData, setNoData] = useState(false);\r\n\r\n  window.onscroll = () => {\r\n    if (window.innerHeight + document.documentElement.scrollTop === document.documentElement.offsetHeight) {\r\n      if(!noData) {\r\n        loadUserList(page);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadUserList(page);\r\n  }, []);\r\n\r\n  const loadUserList = (page) => {\r\n    setLoading(true);\r\n    setTimeout(() => {\r\n      Data.Image.map(page)\r\n        .then((res) => {\r\n          const newPage = page + 1;\r\n          const newList = userList.concat(res.Data);\r\n          setUserList(newList);\r\n          setPage(newPage);\r\n          if(res.data.length===0)\r\n            setNoData(true);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() =>{\r\n          setLoading(false);\r\n        })\r\n      }\r\n    ,1500);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div className=\"section\">\r\n\r\n      { Data.colleges.map((post,i) => {\r\n          ( \r\n          <div className=\"box m-3 user\" key={i}>\r\n            <img src={Image} alt=\"\"/>\r\n            <div className=\"user-details\">\r\n             \r\n              <strong>First Name</strong>:{post.college_name}<br/> \r\n              \r\n            </div>\r\n          </div>\r\n          )\r\n        })}\r\n        {loading ?  <div className=\"text-center\">loading data ...</div> : \"\" }\r\n        {noData ? <div className=\"text-center\">no data anymore ...</div> : \"\" }    \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}